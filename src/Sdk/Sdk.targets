<Project>

  <Target Name="IncludePackAsAnalyzerProjectReferences"
          Condition="'@(ProjectReference)' != '' and @(ProjectReference->AnyHaveMetadataValue('PackAsAnalyzer', 'true'))">
    <MSBuild Projects="@(ProjectReference->WithMetadataValue('PackAsAnalyzer', 'true'))"
             Targets="GetPackAsAnalyzerFiles">
      <Output TaskParameter="TargetOutputs" ItemName="PackAsAnalyzerFile" />
    </MSBuild>

    <ItemGroup>
      <Content Include="@(PackAsAnalyzerFile->WithMetadataValue('IsSymbol', ''))"
               Pack="True" />
      <_TargetPathsToSymbols Include="@(PackAsAnalyzerFile->WithMetadataValue('IsSymbol', 'true'))"
                             TargetPath="/%(PackAsAnalyzerFile.PackagePath)" />
    </ItemGroup>
  </Target>

  <Target Name="GetPackAsAnalyzerFiles"
          DependsOnTargets="$(GenerateNuspecDependsOn)"
          Returns="@(PackAsAnalyzerFile)">
    <PropertyGroup>
      <PackAsAnalyzerPath>analyzers/dotnet</PackAsAnalyzerPath>
      <PackAsAnalyzerPath Condition="'$(AnalyzerRoslynVersion)' != ''">$(PackAsAnalyzerPath)/roslyn$(AnalyzerRoslynVersion)</PackAsAnalyzerPath>
      <PackAsAnalyzerPath Condition="'$(AnalyzerLanguage)' != ''">$(PackAsAnalyzerPath)/$(AnalyzerLanguage)</PackAsAnalyzerPath>
    </PropertyGroup>

    <ItemGroup>
      <PackAsAnalyzerFile Include="@(_BuildOutputInPackage)" />
      <PackAsAnalyzerFile Include="@(_TargetPathsToSymbols)" IsSymbol="true" />
      <PackAsAnalyzerFile PackagePath="$(PackAsAnalyzerPath)/%(TargetPath)" />
    </ItemGroup>
  </Target>

</Project>